(function () {

	var dave_chat = angular.module('DaveChat', ['luegg.directives']);

	dave_chat.directive('ngEnter', function () {
    return function (scope, element, attrs) {
        element.bind("keydown keypress", function (event) {
            if(event.which === 13) {
                scope.$apply(function (){
                    scope.$eval(attrs.ngEnter);
                });
 
                event.preventDefault();
            }
        });
    };
	});

	dave_chat.controller('ChatController', ChatController);

	function ChatController ($scope) {
		var vm = this; 

		vm.init = function () {

			vm.messages = [];
			vm.messageForm = {};

			var notificationAudio = new Audio('assets/notification.mp3');

			// Get/set account from localStorage
			var savedAccount = JSON.parse(localStorage.getItem('account'));
			vm.account = (savedAccount == null) ? {} : savedAccount;

			// Connect to server
			var server = io.connect(SERVER);

			// Send message event handler
			vm.sendMessage = function () {	
				var message = $('#messageInput').val();
				$('#messageInput').val('');

				// Emit message event with message content
				server.emit('message', message);
			};	

			// Listen for successful connection event
			server.on('connect', function () {

				// Save id to identify own messages
				// vm.clientId = this.id;

				while (vm.account.nickname == null) {
					vm.account.nickname = prompt("What is your nickname?")
					localStorage.setItem("account", JSON.stringify(vm.account));
				}

				// Emit join event with chosen nickname
				server.emit('join', vm.account);
			});

			// Listen on identity event to save uuid generated by server
			server.on('identity', function (uuid) {
				vm.account.uuid = uuid;
				localStorage.setItem("account", JSON.stringify(vm.account));
			});

			// Listen for the 'message' event
			server.on('message', function (message) {

				// Set ingoing vs outgoing
				if (vm.account.uuid == message.sender.uuid)
					message.isSender = true;
				else
					notificationAudio.play();

				vm.messages.push(message);
				$scope.$evalAsync();
			});
		};
	}
})();